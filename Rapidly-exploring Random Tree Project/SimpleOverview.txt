This code works by using pygame GUI to display the output. Once the files are in an IDE with the downloaded libraries, run the RRT.py file. This file generates an environment for the RRT path finding to take place on. You can create your own test case if wanted easily by changing the number of obstacles or dimensions of those obstacles. The file will prompt the user for a number of iterations. These iterations will run to create the nodes, however, only a successfully placed node will appear so the iterations and nodes are not proportional. The blue box in the center of the screen serves to add a penalty of 100 distance to any path that crosses through it's area. The best found path has it's nodes illuminated in red to show which path is best. The console will output the distance of that path, its current number of iterations, and also the total nodes of the RRT search.